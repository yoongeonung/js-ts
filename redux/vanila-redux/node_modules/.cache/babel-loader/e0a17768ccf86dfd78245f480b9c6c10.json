{"ast":null,"code":"import { createStore } from \"redux\";\nconst ul = document.querySelector(\"#todo-ul\");\nconst input = document.querySelector(\"input\");\nconst form = document.querySelector(\"form\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst dispatchAddToDo = () => {};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE_TODO:\n      return [];\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst addToDo = text => {\n  store.dispatch({\n    type: ADD_TODO,\n    text\n  });\n};\n\nconst handleInput = e => {\n  e.preventDefault();\n  const todo = input.value;\n  input.value = \"\";\n  addToDo(todo);\n};\n\nform.addEventListener(\"submit\", handleInput);\nstore.subscribe(() => console.log(store.getState()));\n\nconst deleteToDo = e => {\n  const id = e.target.parentNode.id;\n  store.dispatch({\n    type: DELETE_TODO,\n    id\n  });\n};\n\nconst paintToDos = () => {\n  const toDos = store.getState();\n  ul.innerHTML = \"\";\n  toDos.forEach(todo => {\n    const li = document.createElement(\"li\");\n    const btn = document.createElement(\"button\");\n    btn.innerText = \"del\";\n    btn.addEventListener(\"click\", deleteToDo);\n    li.id = todo.id;\n    li.innerText = todo.text;\n    li.appendChild(btn);\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);","map":{"version":3,"sources":["/Users/yoongeonung/Code/JS/redux/src/index.js"],"names":["createStore","ul","document","querySelector","input","form","ADD_TODO","DELETE_TODO","dispatchAddToDo","reducer","state","action","type","text","id","Date","now","store","addToDo","dispatch","handleInput","e","preventDefault","todo","value","addEventListener","subscribe","console","log","getState","deleteToDo","target","parentNode","paintToDos","toDos","innerHTML","forEach","li","createElement","btn","innerText","appendChild"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAX;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,MAAME,IAAI,GAAGH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMG,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,eAAe,GAAG,MAAM,CAE7B,CAFD;;AAMA,MAAMC,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,QAAL;AACI,aAAO,CAAC;AAAEO,QAAAA,IAAI,EAAGF,MAAM,CAACE,IAAhB;AAAsBC,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAA1B,OAAD,EAAyC,GAAGN,KAA5C,CAAP;;AACJ,SAAKH,WAAL;AACI,aAAO,EAAP;;AACJ;AACI,aAAOG,KAAP;AANR;AAQH,CATD;;AAWA,MAAMO,KAAK,GAAGjB,WAAW,CAACS,OAAD,CAAzB;;AAIA,MAAMS,OAAO,GAAIL,IAAD,IAAU;AACtBI,EAAAA,KAAK,CAACE,QAAN,CAAe;AAACP,IAAAA,IAAI,EAAEN,QAAP;AAAiBO,IAAAA;AAAjB,GAAf;AACH,CAFD;;AAIA,MAAMO,WAAW,GAAIC,CAAD,IAAO;AACvBA,EAAAA,CAAC,CAACC,cAAF;AACA,QAAMC,IAAI,GAAGnB,KAAK,CAACoB,KAAnB;AACApB,EAAAA,KAAK,CAACoB,KAAN,GAAc,EAAd;AACAN,EAAAA,OAAO,CAACK,IAAD,CAAP;AAGH,CAPD;;AASAlB,IAAI,CAACoB,gBAAL,CAAsB,QAAtB,EAAgCL,WAAhC;AAEAH,KAAK,CAACS,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,QAAN,EAAZ,CAAtB;;AAEA,MAAMC,UAAU,GAAIT,CAAD,IAAO;AACtB,QAAMP,EAAE,GAAGO,CAAC,CAACU,MAAF,CAASC,UAAT,CAAoBlB,EAA/B;AACAG,EAAAA,KAAK,CAACE,QAAN,CAAe;AAACP,IAAAA,IAAI,EAAGL,WAAR;AAAqBO,IAAAA;AAArB,GAAf;AACH,CAHD;;AAKA,MAAMmB,UAAU,GAAG,MAAM;AACrB,QAAMC,KAAK,GAAGjB,KAAK,CAACY,QAAN,EAAd;AACA5B,EAAAA,EAAE,CAACkC,SAAH,GAAe,EAAf;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcb,IAAI,IAAI;AAClB,UAAMc,EAAE,GAAGnC,QAAQ,CAACoC,aAAT,CAAuB,IAAvB,CAAX;AACA,UAAMC,GAAG,GAAGrC,QAAQ,CAACoC,aAAT,CAAuB,QAAvB,CAAZ;AACAC,IAAAA,GAAG,CAACC,SAAJ,GAAgB,KAAhB;AACAD,IAAAA,GAAG,CAACd,gBAAJ,CAAqB,OAArB,EAA8BK,UAA9B;AACAO,IAAAA,EAAE,CAACvB,EAAH,GAAQS,IAAI,CAACT,EAAb;AACAuB,IAAAA,EAAE,CAACG,SAAH,GAAejB,IAAI,CAACV,IAApB;AACAwB,IAAAA,EAAE,CAACI,WAAH,CAAeF,GAAf;AACAtC,IAAAA,EAAE,CAACwC,WAAH,CAAeJ,EAAf;AACH,GATD;AAUH,CAbD;;AAeApB,KAAK,CAACS,SAAN,CAAgBO,UAAhB","sourcesContent":["import {createStore} from \"redux\";\n\nconst ul = document.querySelector(\"#todo-ul\");\nconst input = document.querySelector(\"input\");\nconst form = document.querySelector(\"form\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst dispatchAddToDo = () => {\n\n}\n\n\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [{ text : action.text, id: Date.now() }, ...state];\n        case DELETE_TODO:\n            return [];\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\n\n\n\nconst addToDo = (text) => {\n    store.dispatch({type: ADD_TODO, text})\n}\n\nconst handleInput = (e) => {\n    e.preventDefault();\n    const todo = input.value;\n    input.value = \"\";\n    addToDo(todo);\n\n\n}\n\nform.addEventListener(\"submit\", handleInput)\n\nstore.subscribe(() => console.log(store.getState()));\n\nconst deleteToDo = (e) => {\n    const id = e.target.parentNode.id;\n    store.dispatch({type : DELETE_TODO, id})\n}\n\nconst paintToDos = () => {\n    const toDos = store.getState();\n    ul.innerHTML = \"\";\n    toDos.forEach(todo => {\n        const li = document.createElement(\"li\");\n        const btn = document.createElement(\"button\");\n        btn.innerText = \"del\";\n        btn.addEventListener(\"click\", deleteToDo);\n        li.id = todo.id;\n        li.innerText = todo.text;\n        li.appendChild(btn);\n        ul.appendChild(li);\n    })\n};\n\nstore.subscribe(paintToDos);"]},"metadata":{},"sourceType":"module"}