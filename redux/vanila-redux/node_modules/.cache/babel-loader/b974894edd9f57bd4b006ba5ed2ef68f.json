{"ast":null,"code":"import { createStore } from \"redux\";\nconst ul = document.querySelector(\"#todo-ul\");\nconst input = document.querySelector(\"input\");\nconst form = document.querySelector(\"form\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst dispatchAddToDo = text => {\n  store.dispatch(addToDo(text));\n};\n\nconst dispatchDeleteToDo = e => {\n  const id = e.target.parentNode.id;\n  store.dispatch(deleteToDo(id));\n};\n\nconst addToDo = text => {\n  return {\n    type: ADD_TODO,\n    text\n  };\n};\n\nconst deleteToDo = id => {\n  return {\n    type: DELETE_TODO,\n    id\n  };\n};\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return [{\n        text: action.text,\n        id: Date.now()\n      }, ...state];\n\n    case DELETE_TODO:\n      let filteredState = state.filter(todo => {\n        return todo.id !== parseInt(action.id);\n      });\n      return [...filteredState];\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\n\nconst handleInput = e => {\n  e.preventDefault();\n  const todo = input.value;\n  input.value = \"\";\n  dispatchAddToDo(todo);\n};\n\nform.addEventListener(\"submit\", handleInput);\nstore.subscribe(() => console.log(store.getState()));\n\nconst paintToDos = () => {\n  const toDos = store.getState();\n  ul.innerHTML = \"\";\n  toDos.forEach(todo => {\n    const li = document.createElement(\"li\");\n    const btn = document.createElement(\"button\");\n    btn.innerText = \"del\";\n    btn.addEventListener(\"click\", dispatchDeleteToDo);\n    li.id = todo.id;\n    li.innerText = todo.text;\n    li.appendChild(btn);\n    ul.appendChild(li);\n  });\n};\n\nstore.subscribe(paintToDos);","map":{"version":3,"sources":["/Users/yoongeonung/Code/JS/redux/src/index.js"],"names":["createStore","ul","document","querySelector","input","form","ADD_TODO","DELETE_TODO","dispatchAddToDo","text","store","dispatch","addToDo","dispatchDeleteToDo","e","id","target","parentNode","deleteToDo","type","reducer","state","action","Date","now","filteredState","filter","todo","parseInt","handleInput","preventDefault","value","addEventListener","subscribe","console","log","getState","paintToDos","toDos","innerHTML","forEach","li","createElement","btn","innerText","appendChild"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAX;AACA,MAAMC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACA,MAAME,IAAI,GAAGH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,MAAMG,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,eAAe,GAAIC,IAAD,IAAU;AAC9BC,EAAAA,KAAK,CAACC,QAAN,CAAeC,OAAO,CAACH,IAAD,CAAtB;AACH,CAFD;;AAGA,MAAMI,kBAAkB,GAAIC,CAAD,IAAO;AAC9B,QAAMC,EAAE,GAAGD,CAAC,CAACE,MAAF,CAASC,UAAT,CAAoBF,EAA/B;AACAL,EAAAA,KAAK,CAACC,QAAN,CAAeO,UAAU,CAACH,EAAD,CAAzB;AACH,CAHD;;AAKA,MAAMH,OAAO,GAAGH,IAAI,IAAI;AACpB,SAAO;AACHU,IAAAA,IAAI,EAAEb,QADH;AAEHG,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMS,UAAU,GAAGH,EAAE,IAAI;AACrB,SAAO;AACHI,IAAAA,IAAI,EAAGZ,WADJ;AAEHQ,IAAAA;AAFG,GAAP;AAIH,CALD;;AAQA,MAAMK,OAAO,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACpC,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKb,QAAL;AACI,aAAO,CAAC;AAAEG,QAAAA,IAAI,EAAGa,MAAM,CAACb,IAAhB;AAAsBM,QAAAA,EAAE,EAAEQ,IAAI,CAACC,GAAL;AAA1B,OAAD,EAAyC,GAAGH,KAA5C,CAAP;;AACJ,SAAKd,WAAL;AACI,UAAIkB,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAI;AACrC,eAAOA,IAAI,CAACZ,EAAL,KAAYa,QAAQ,CAACN,MAAM,CAACP,EAAR,CAA3B;AACH,OAFmB,CAApB;AAGA,aAAO,CAAC,GAAGU,aAAJ,CAAP;;AACJ;AACI,aAAOJ,KAAP;AATR;AAWH,CAZD;;AAcA,MAAMX,KAAK,GAAGV,WAAW,CAACoB,OAAD,CAAzB;;AAGA,MAAMS,WAAW,GAAIf,CAAD,IAAO;AACvBA,EAAAA,CAAC,CAACgB,cAAF;AACA,QAAMH,IAAI,GAAGvB,KAAK,CAAC2B,KAAnB;AACA3B,EAAAA,KAAK,CAAC2B,KAAN,GAAc,EAAd;AACAvB,EAAAA,eAAe,CAACmB,IAAD,CAAf;AAGH,CAPD;;AASAtB,IAAI,CAAC2B,gBAAL,CAAsB,QAAtB,EAAgCH,WAAhC;AAEAnB,KAAK,CAACuB,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYzB,KAAK,CAAC0B,QAAN,EAAZ,CAAtB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,KAAK,GAAG5B,KAAK,CAAC0B,QAAN,EAAd;AACAnC,EAAAA,EAAE,CAACsC,SAAH,GAAe,EAAf;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcb,IAAI,IAAI;AAClB,UAAMc,EAAE,GAAGvC,QAAQ,CAACwC,aAAT,CAAuB,IAAvB,CAAX;AACA,UAAMC,GAAG,GAAGzC,QAAQ,CAACwC,aAAT,CAAuB,QAAvB,CAAZ;AACAC,IAAAA,GAAG,CAACC,SAAJ,GAAgB,KAAhB;AACAD,IAAAA,GAAG,CAACX,gBAAJ,CAAqB,OAArB,EAA8BnB,kBAA9B;AACA4B,IAAAA,EAAE,CAAC1B,EAAH,GAAQY,IAAI,CAACZ,EAAb;AACA0B,IAAAA,EAAE,CAACG,SAAH,GAAejB,IAAI,CAAClB,IAApB;AACAgC,IAAAA,EAAE,CAACI,WAAH,CAAeF,GAAf;AACA1C,IAAAA,EAAE,CAAC4C,WAAH,CAAeJ,EAAf;AACH,GATD;AAUH,CAbD;;AAeA/B,KAAK,CAACuB,SAAN,CAAgBI,UAAhB","sourcesContent":["import {createStore} from \"redux\";\n\nconst ul = document.querySelector(\"#todo-ul\");\nconst input = document.querySelector(\"input\");\nconst form = document.querySelector(\"form\");\nconst ADD_TODO = \"ADD_TODO\";\nconst DELETE_TODO = \"DELETE_TODO\";\n\nconst dispatchAddToDo = (text) => {\n    store.dispatch(addToDo(text))\n}\nconst dispatchDeleteToDo = (e) => {\n    const id = e.target.parentNode.id;\n    store.dispatch(deleteToDo(id));\n}\n\nconst addToDo = text => {\n    return {\n        type: ADD_TODO,\n        text\n    }\n}\n\nconst deleteToDo = id => {\n    return {\n        type : DELETE_TODO,\n        id\n    }\n}\n\n\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TODO:\n            return [{ text : action.text, id: Date.now() }, ...state];\n        case DELETE_TODO:\n            let filteredState = state.filter(todo => {\n                return todo.id !== parseInt(action.id);\n            });\n            return [...filteredState];\n        default:\n            return state;\n    }\n}\n\nconst store = createStore(reducer);\n\n\nconst handleInput = (e) => {\n    e.preventDefault();\n    const todo = input.value;\n    input.value = \"\";\n    dispatchAddToDo(todo);\n\n\n}\n\nform.addEventListener(\"submit\", handleInput)\n\nstore.subscribe(() => console.log(store.getState()));\n\n\nconst paintToDos = () => {\n    const toDos = store.getState();\n    ul.innerHTML = \"\";\n    toDos.forEach(todo => {\n        const li = document.createElement(\"li\");\n        const btn = document.createElement(\"button\");\n        btn.innerText = \"del\";\n        btn.addEventListener(\"click\", dispatchDeleteToDo);\n        li.id = todo.id;\n        li.innerText = todo.text;\n        li.appendChild(btn);\n        ul.appendChild(li);\n    })\n};\n\nstore.subscribe(paintToDos);"]},"metadata":{},"sourceType":"module"}